class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
       int s=0;
        
        int e=nums.size()-1;
        int n=e;
        int mid=(s+e)/2;
        if(target<nums[0])
        {
            return 0;
        }
        if(target>nums[e])
        {
            return e+1;
        }
        while(s<=e)
        {
            if(target==nums[mid])
            {
                return mid;
            }
            else if(target<nums[mid] && target>nums[mid-1])
            {       return mid;
                
            }
             else if(target<nums[mid])
             {
                  e=mid-1;
                mid=(s+e)/2;
             }
            else if(target>nums[mid] && target<nums[mid+1])
            {  return mid+1;
                
            }
             else if(target>nums[mid] )
             {
                 s=mid+1;
                mid=(s+e)/2;
             }
        }
        return 0;
        
    }
};
