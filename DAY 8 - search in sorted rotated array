int pivot(vector<int>& arr , int n)
 {
     int start=0;
     int End=n-1;
     int mid= start+(End-start)/2;

     while(start<End)
     {
         if(arr[mid]>=arr[0])
         {
             start=mid+1;
         }
         else{
            End=mid;
         }
         mid= start+(End-start)/2;
     }
     return start;
    
}
int binary(vector<int>& arr, int s , int e , int key)
{
    int start=s;;
    int last=e;

int    mid=(start+last)/2;

    while(start<=last)
    {
        if(arr[mid]==key)
        {
            return mid;
        }
        if(key>arr[mid])
        {
            start=mid+1;
        }
        else
        {
            last=mid-1;
        }
        mid=(start+last)/2;
    }
    return -1;
}
#include <bits/stdc++.h> 
int findPosition(vector<int>& arr, int n, int k)
{
    // Write your code here.
    // Return the position of K in ARR else return -1.
    int p=pivot(arr ,n);
    if(k>=arr[p] && k<=arr[n-1])
    {
        return binary(arr , p , n-1 , k);
    }
    else
              return binary(arr , 0 , p-1 , k);
}

